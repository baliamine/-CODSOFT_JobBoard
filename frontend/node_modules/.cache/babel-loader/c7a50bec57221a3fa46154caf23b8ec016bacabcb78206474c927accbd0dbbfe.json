{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\MERN STACK\\\\frontend\\\\src\\\\components\\\\OfferForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport UseOfferContext from \"../hooks/UseOfferContext\";\n\n// Define the OfferForm functional component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OfferForm = () => {\n  _s();\n  // Use the context to access the dispatch function for updating state\n  const {\n    dispatch\n  } = UseOfferContext();\n  const [dataOffer, setDataOffer] = useState({});\n  const [errors, setErrors] = useState({});\n\n  // Declare state variables for form fields and their corresponding setter \n\n  // Define an asynchronous function that handles form validation and submission\n  const ValidateForm = async e => {\n    e.preventDefault(); //I want to handle this form submission myself; don't do it the default way\n\n    // Create an object with the form data to send in the request body\n    const offer = {\n      title,\n      company,\n      location,\n      publicationDate,\n      salary,\n      requirements,\n      description\n    };\n\n    // Send a POST request to add the job offer to the backend\n    const response = await fetch(\"/API/offer/add-offer\", {\n      method: \"POST\",\n      body: JSON.stringify(offer),\n      // Convert the offer object to a JSON string\n      headers: {\n        \"Content-Type\": \"application/json\" // Inform the server that the request body is in JSON format\n      }\n    });\n    const json = await response.json(); // Parse the response JSON\n\n    // If the response is not okay, update the error state\n    if (!response.ok) {\n      setError(json.error);\n      setEmptyInput(json.emptyInput);\n    } else {\n      // If the response is okay, reset the form fields and dispatch the new offer\n      setTitle(\"\");\n      setCompany(\"\");\n      setLocation(\"\");\n      setPublicationDate(\"\");\n      setSalary(\"\");\n      setRequirements(\"\");\n      setDescription(\"\");\n      setError(null); // Reset the error state\n      setEmptyInput([]); // Reset the emptyInput state\n      dispatch({\n        type: \"ADD_OFFER\",\n        payload: json\n      }); // Update the offers in context\n    }\n  };\n\n  // JSX to render the form\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    className: \"add_offer\",\n    onSubmit: ValidateForm,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Offer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTitle(e.target.value) // Update title state when the user types\n      ,\n      value: title // Bind the input field to the title state variable\n      ,\n      className: emptyInput.includes(\"title\") ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Company:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setCompany(e.target.value) // Update company state\n      ,\n      value: company // Bind to company state variable\n      ,\n      className: emptyInput.includes(\"company\") ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Location:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setLocation(e.target.value) // Update location state\n      ,\n      value: location // Bind to location state variable\n      ,\n      className: emptyInput.includes(\"location\") ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Publication Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      onChange: e => setPublicationDate(e.target.value) // Update publicationDate state\n      ,\n      value: publicationDate // Bind to publicationDate state variable\n      ,\n      className: emptyInput.includes(\"publicationDate\") ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Salary:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: e => setSalary(e.target.value) // Update salary state\n      ,\n      value: salary // Bind to salary state variable\n      ,\n      className: emptyInput.includes(\"salary\") ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Requirements:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setRequirements(e.target.value) // Update requirements state\n      ,\n      value: requirements // Bind to requirements state variable\n      ,\n      className: emptyInput.includes(\"requirements\") ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Description:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setDescription(e.target.value) // Update description state\n      ,\n      value: description // Bind to description state variable\n      ,\n      className: emptyInput.includes(\"description\") ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Offer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(OfferForm, \"fcMt+qAkzZS90x0jDwp8sW/tazM=\");\n_c = OfferForm;\nexport default OfferForm;\nvar _c;\n$RefreshReg$(_c, \"OfferForm\");","map":{"version":3,"names":["useState","UseOfferContext","jsxDEV","_jsxDEV","OfferForm","_s","dispatch","dataOffer","setDataOffer","errors","setErrors","ValidateForm","e","preventDefault","offer","title","company","location","publicationDate","salary","requirements","description","response","fetch","method","body","JSON","stringify","headers","json","ok","setError","error","setEmptyInput","emptyInput","setTitle","setCompany","setLocation","setPublicationDate","setSalary","setRequirements","setDescription","type","payload","action","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","includes","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/MERN STACK/frontend/src/components/OfferForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport UseOfferContext from \"../hooks/UseOfferContext\";\r\n\r\n// Define the OfferForm functional component\r\nconst OfferForm = () => {\r\n  // Use the context to access the dispatch function for updating state\r\n  const { dispatch } = UseOfferContext();\r\n  const [dataOffer,setDataOffer]=useState({});\r\n  const [errors,setErrors]=useState({});\r\n\r\n  // Declare state variables for form fields and their corresponding setter \r\n\r\n  // Define an asynchronous function that handles form validation and submission\r\n  const ValidateForm = async (e) => {\r\n    e.preventDefault(); //I want to handle this form submission myself; don't do it the default way\r\n\r\n    // Create an object with the form data to send in the request body\r\n    const offer = {\r\n      title,\r\n      company,\r\n      location,\r\n      publicationDate,\r\n      salary,\r\n      requirements,\r\n      description,\r\n    };\r\n\r\n    // Send a POST request to add the job offer to the backend\r\n    const response = await fetch(\"/API/offer/add-offer\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(offer), // Convert the offer object to a JSON string\r\n      headers: {\r\n        \"Content-Type\": \"application/json\", // Inform the server that the request body is in JSON format\r\n      },\r\n    });\r\n\r\n    const json = await response.json(); // Parse the response JSON\r\n\r\n    // If the response is not okay, update the error state\r\n    if (!response.ok) {\r\n      setError(json.error);\r\n      setEmptyInput(json.emptyInput);\r\n    } else {\r\n      // If the response is okay, reset the form fields and dispatch the new offer\r\n      setTitle(\"\");\r\n      setCompany(\"\");\r\n      setLocation(\"\");\r\n      setPublicationDate(\"\");\r\n      setSalary(\"\");\r\n      setRequirements(\"\");\r\n      setDescription(\"\");\r\n      setError(null); // Reset the error state\r\n      setEmptyInput([]); // Reset the emptyInput state\r\n      dispatch({ type: \"ADD_OFFER\", payload: json }); // Update the offers in context\r\n    }\r\n  };\r\n\r\n  // JSX to render the form\r\n  return (\r\n    <form action=\"\" className=\"add_offer\" onSubmit={ValidateForm}>\r\n      <h3>Add Offer</h3>\r\n\r\n      <label>Title:</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setTitle(e.target.value)} // Update title state when the user types\r\n        value={title} // Bind the input field to the title state variable\r\n        className={emptyInput.includes(\"title\")? 'error' :''}\r\n      />\r\n\r\n      <label>Company:</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setCompany(e.target.value)} // Update company state\r\n        value={company} // Bind to company state variable\r\n        className={emptyInput.includes(\"company\")? 'error' :''}\r\n      />\r\n\r\n      <label>Location:</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setLocation(e.target.value)} // Update location state\r\n        value={location} // Bind to location state variable\r\n        className={emptyInput.includes(\"location\")? 'error' :''}\r\n      />\r\n\r\n      <label>Publication Date:</label>\r\n      <input\r\n        type=\"date\"\r\n        onChange={(e) => setPublicationDate(e.target.value)} // Update publicationDate state\r\n        value={publicationDate} // Bind to publicationDate state variable\r\n        className={emptyInput.includes(\"publicationDate\")? 'error' :''}\r\n      />\r\n\r\n      <label>Salary:</label>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => setSalary(e.target.value)} // Update salary state\r\n        value={salary} // Bind to salary state variable\r\n        className={emptyInput.includes(\"salary\")? 'error' :''}\r\n      />\r\n\r\n      <label>Requirements:</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setRequirements(e.target.value)} // Update requirements state\r\n        value={requirements} // Bind to requirements state variable\r\n        className={emptyInput.includes(\"requirements\")? 'error' :''}\r\n      />\r\n\r\n      <label>Description:</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setDescription(e.target.value)} // Update description state\r\n        value={description} // Bind to description state variable\r\n        className={emptyInput.includes(\"description\")? 'error' :''}\r\n      />\r\n\r\n      <button type=\"submit\">Add Offer</button>\r\n      {error && <div className=\"error\">Error: {error}</div>} {/* Display any error messages */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default OfferForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}