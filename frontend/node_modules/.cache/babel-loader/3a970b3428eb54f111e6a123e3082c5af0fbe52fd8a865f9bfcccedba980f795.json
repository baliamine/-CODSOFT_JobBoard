{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\MERN STACK\\\\frontend\\\\src\\\\components\\\\OfferForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport UseOfferContext from \"../hooks/UseOfferContext\";\n\n// Define the OfferForm functional component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OfferForm = () => {\n  _s();\n  // Use the context to access the dispatch function for updating state\n  const {\n    dispatch\n  } = UseOfferContext();\n  const [dataOffer, setDataOffer] = useState({\n    title: \"\",\n    company: \"\",\n    location: \"\",\n    publicationDate: \"\",\n    salary: \"\",\n    requirements: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const SubmitOffer = async e => {\n    try {\n      e.preventDefault(); //I want to handle this form submission myself; don't do it the default way\n\n      // Send a POST request to add the job offer to the backend\n      const response = await fetch(\"/API/offer/add-offer\", {\n        method: \"POST\",\n        body: JSON.stringify(dataOffer),\n        // Convert the offer object to a JSON string\n        headers: {\n          \"Content-Type\": \"application/json\" // Inform the server that the request body is in JSON format\n        }\n      });\n      const json = await response.json(); // Parse the response JSON\n      dispatch({\n        type: \"ADD_OFFER\",\n        payload: json\n      }); // Update the offers in context\n    } catch (e) {\n      console.log('e', e);\n    }\n  };\n\n  // JSX to render the form\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    className: \"add_offer\",\n    onSubmit: SubmitOffer,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Offer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setDataOffer({\n        ...dataOffer,\n        title: e.target.value\n      }) // Update title state when the user types\n      ,\n      value: dataOffer.title // Bind the input field to the title state variable\n      // className={emptyInput.includes(\"title\")? 'error' :''}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Company:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setDataOffer({\n        ...dataOffer,\n        company: e.target.value\n      }) // Update company state\n      ,\n      value: dataOffer.company // Bind the input field to the title state variable\n      // Bind to company state variable\n      // className={emptyInput.includes(\"company\")? 'error' :''}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Offer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), errors && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", errors]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 18\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(OfferForm, \"a8E3iR6zV27WoiC0ppBIRKMhvPM=\");\n_c = OfferForm;\nexport default OfferForm;\nvar _c;\n$RefreshReg$(_c, \"OfferForm\");","map":{"version":3,"names":["useState","UseOfferContext","jsxDEV","_jsxDEV","OfferForm","_s","dispatch","dataOffer","setDataOffer","title","company","location","publicationDate","salary","requirements","errors","setErrors","SubmitOffer","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","json","type","payload","console","log","action","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/MERN STACK/frontend/src/components/OfferForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport UseOfferContext from \"../hooks/UseOfferContext\";\r\n\r\n// Define the OfferForm functional component\r\nconst OfferForm = () => {\r\n  // Use the context to access the dispatch function for updating state\r\n  const { dispatch } = UseOfferContext();\r\n  const [dataOffer,setDataOffer]=useState({\r\n    title:\"\",\r\n    company:\"\",\r\n    location:\"\",\r\n    publicationDate:\"\",\r\n    salary:\"\",\r\n    requirements:\"\",\r\n  });\r\n  const [errors,setErrors]=useState({});\r\n  const SubmitOffer = async (e) => {\r\n    try{\r\n      e.preventDefault(); //I want to handle this form submission myself; don't do it the default way\r\n\r\n      // Send a POST request to add the job offer to the backend\r\n      const response = await fetch(\"/API/offer/add-offer\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(dataOffer), // Convert the offer object to a JSON string\r\n        headers: {\r\n          \"Content-Type\": \"application/json\", // Inform the server that the request body is in JSON format\r\n        },\r\n      });\r\n      const json = await response.json(); // Parse the response JSON\r\n        dispatch({ type: \"ADD_OFFER\", payload: json }); // Update the offers in context\r\n      }\r\n    catch (e) {\r\n      console.log('e', e)\r\n    }\r\n   \r\n  };\r\n\r\n  // JSX to render the form\r\n  return (\r\n    <form action=\"\" className=\"add_offer\" onSubmit={SubmitOffer}>\r\n      <h3>Add Offer</h3>\r\n\r\n      <label>Title:</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setDataOffer({...dataOffer,title:e.target.value})} // Update title state when the user types\r\n        value={dataOffer.title} // Bind the input field to the title state variable\r\n        // className={emptyInput.includes(\"title\")? 'error' :''}\r\n      />\r\n\r\n      <label>Company:</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setDataOffer({...dataOffer,company:e.target.value})} // Update company state\r\n        value={dataOffer.company} // Bind the input field to the title state variable\r\n        // Bind to company state variable\r\n        // className={emptyInput.includes(\"company\")? 'error' :''}\r\n      />\r\n\r\n      {/* <label>Location:</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setLocation(e.target.value)} // Update location state\r\n        value={location} // Bind to location state variable\r\n        className={emptyInput.includes(\"location\")? 'error' :''}\r\n      />\r\n\r\n      <label>Publication Date:</label>\r\n      <input\r\n        type=\"date\"\r\n        onChange={(e) => setPublicationDate(e.target.value)} // Update publicationDate state\r\n        value={publicationDate} // Bind to publicationDate state variable\r\n        className={emptyInput.includes(\"publicationDate\")? 'error' :''}\r\n      />\r\n\r\n      <label>Salary:</label>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => setSalary(e.target.value)} // Update salary state\r\n        value={salary} // Bind to salary state variable\r\n        className={emptyInput.includes(\"salary\")? 'error' :''}\r\n      />\r\n\r\n      <label>Requirements:</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setRequirements(e.target.value)} // Update requirements state\r\n        value={requirements} // Bind to requirements state variable\r\n        className={emptyInput.includes(\"requirements\")? 'error' :''}\r\n      />\r\n\r\n      <label>Description:</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setDescription(e.target.value)} // Update description state\r\n        value={description} // Bind to description state variable\r\n        className={emptyInput.includes(\"description\")? 'error' :''}\r\n      /> */}\r\n\r\n      <button type=\"submit\">Add Offer</button>\r\n      {errors && <div className=\"error\">Error: {errors}</div>} {/* Display any error messages */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default OfferForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}