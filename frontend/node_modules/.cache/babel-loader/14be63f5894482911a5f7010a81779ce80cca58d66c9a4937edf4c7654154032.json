{"ast":null,"code":"import{createContext,useReducer}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export const EmployerContext=/*#__PURE__*/createContext();export const EmployerReducer=(state,action)=>{switch(action.type){case\"SET_EMPLOYER\":return{employers:action.payload};case\"ADD_EMPLOYER\":return{employers:[action.payload,...state.employers]};case\"DELETE_EMPLOYER\":return{employers:state.employers.filter(employer=>employer._id!==action.payload._id)};case\"UPDATE_EMPLOYER\":return{employers:state.employers.map(employer=>employer._id===action.payload._id?action.payload:employer)};default:return state;}};export const EmployerContextProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(EmployerReducer,{employers:[]});return/*#__PURE__*/_jsx(EmployerContext.Provider,{value:{...state,dispatch},children:children});};","map":{"version":3,"names":["createContext","useReducer","jsx","_jsx","EmployerContext","EmployerReducer","state","action","type","employers","payload","filter","employer","_id","map","EmployerContextProvider","_ref","children","dispatch","Provider","value"],"sources":["C:/Users/DELL/OneDrive/Desktop/MERN STACK/frontend/src/context/EmployerContext.js"],"sourcesContent":["import { createContext, useReducer } from \"react\";\r\n\r\nexport const EmployerContext = createContext();\r\n\r\nexport const EmployerReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_EMPLOYER\":\r\n      return { employers: action.payload };\r\n    case \"ADD_EMPLOYER\":\r\n      return { employers: [action.payload, ...state.employers] };\r\n    case \"DELETE_EMPLOYER\":\r\n      return {\r\n        employers: state.employers.filter(\r\n          (employer) => employer._id !== action.payload._id\r\n        ),\r\n      };\r\n    case \"UPDATE_EMPLOYER\":\r\n      return {\r\n        employers: state.employers.map((employer) =>\r\n          employer._id === action.payload._id ? action.payload : employer\r\n        ),\r\n      };\r\n   \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const EmployerContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(EmployerReducer, { employers: [] });\r\n\r\n  return (\r\n    <EmployerContext.Provider value={{ ...state, dispatch }}>\r\n      {children}\r\n    </EmployerContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,UAAU,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElD,MAAO,MAAM,CAAAC,eAAe,cAAGJ,aAAa,CAAC,CAAC,CAE9C,MAAO,MAAM,CAAAK,eAAe,CAAGA,CAACC,KAAK,CAAEC,MAAM,GAAK,CAChD,OAAQA,MAAM,CAACC,IAAI,EACjB,IAAK,cAAc,CACjB,MAAO,CAAEC,SAAS,CAAEF,MAAM,CAACG,OAAQ,CAAC,CACtC,IAAK,cAAc,CACjB,MAAO,CAAED,SAAS,CAAE,CAACF,MAAM,CAACG,OAAO,CAAE,GAAGJ,KAAK,CAACG,SAAS,CAAE,CAAC,CAC5D,IAAK,iBAAiB,CACpB,MAAO,CACLA,SAAS,CAAEH,KAAK,CAACG,SAAS,CAACE,MAAM,CAC9BC,QAAQ,EAAKA,QAAQ,CAACC,GAAG,GAAKN,MAAM,CAACG,OAAO,CAACG,GAChD,CACF,CAAC,CACH,IAAK,iBAAiB,CACpB,MAAO,CACLJ,SAAS,CAAEH,KAAK,CAACG,SAAS,CAACK,GAAG,CAAEF,QAAQ,EACtCA,QAAQ,CAACC,GAAG,GAAKN,MAAM,CAACG,OAAO,CAACG,GAAG,CAAGN,MAAM,CAACG,OAAO,CAAGE,QACzD,CACF,CAAC,CAEH,QACE,MAAO,CAAAN,KAAK,CAChB,CACF,CAAC,CAED,MAAO,MAAM,CAAAS,uBAAuB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClD,KAAM,CAACV,KAAK,CAAEY,QAAQ,CAAC,CAAGjB,UAAU,CAACI,eAAe,CAAE,CAAEI,SAAS,CAAE,EAAG,CAAC,CAAC,CAExE,mBACEN,IAAA,CAACC,eAAe,CAACe,QAAQ,EAACC,KAAK,CAAE,CAAE,GAAGd,KAAK,CAAEY,QAAS,CAAE,CAAAD,QAAA,CACrDA,QAAQ,CACe,CAAC,CAE/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}