{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nexport const useLogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      // Save token and role from the response\n      localStorage.setItem(\"user\", JSON.stringify(json)); // Save entire user object\n      setIsLoading(false);\n      // Redirect based on role\n      navigate(json.role === \"employer\" ? \"/employer-home\" : \"/JobSeeker-home\");\n    }\n  };\n  return {\n    login,\n    error,\n    isLoading\n  };\n};\n_s(useLogin, \"FYVGIxDyuuBPm1d9RwAQrqRCE1U=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useState","useNavigate","useLogin","_s","error","setError","isLoading","setIsLoading","navigate","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","role"],"sources":["C:/Users/DELL/OneDrive/Desktop/MERN STACK/frontend/src/hooks/UseLogin.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const useLogin = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const login = async (email, password) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    const response = await fetch(\"/api/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    const json = await response.json();\r\n\r\n    if (!response.ok) {\r\n      setIsLoading(false);\r\n      setError(json.error);\r\n    }\r\n\r\n    if (response.ok) {\r\n      // Save token and role from the response\r\n      localStorage.setItem(\"user\", JSON.stringify(json)); // Save entire user object\r\n      setIsLoading(false);\r\n      // Redirect based on role\r\n      navigate(json.role === \"employer\" ? \"/employer-home\" : \"/JobSeeker-home\");\r\n    }\r\n  };\r\n\r\n  return { login, error, isLoading };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChBb,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IACtB;IAEA,IAAIQ,QAAQ,CAACQ,EAAE,EAAE;MACf;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;MACpDZ,YAAY,CAAC,KAAK,CAAC;MACnB;MACAC,QAAQ,CAACW,IAAI,CAACI,IAAI,KAAK,UAAU,GAAG,gBAAgB,GAAG,iBAAiB,CAAC;IAC3E;EACF,CAAC;EAED,OAAO;IAAEd,KAAK;IAAEL,KAAK;IAAEE;EAAU,CAAC;AACpC,CAAC;AAACH,EAAA,CAhCWD,QAAQ;EAAA,QAGFD,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}